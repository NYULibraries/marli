docker-defaults: &docker-defaults
  docker:
    - image: cimg/base:2021.07
      environment:
        - IMAGE_NAME=marli
        - HERMES_DEPLOYMENT=marli-unicorn
  working_directory: ~/app

build_docker: &build_docker
  run:
    name: Build Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker-compose build
      docker-compose -f docker-compose.build.yml build

test: &test
  run:
    name: Test
    command: |
      docker-compose run test
      
pull_docker: &pull_docker
  run:
    name: Pull Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker pull quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH} || docker pull quay.io/nyulibraries/${IMAGE_NAME}:latest
      docker pull quay.io/nyulibraries/${IMAGE_NAME}_test:${BRANCH_NO_SLASH} || docker pull quay.io/nyulibraries/${IMAGE_NAME}_test:latest

push_docker: &push_docker
  run:
    name: Push Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker push quay.io/nyulibraries/${IMAGE_NAME}:latest
      docker push quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH}
      docker push quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH}-${CIRCLE_SHA1}
      docker push quay.io/nyulibraries/${IMAGE_NAME}_test:latest
      docker push quay.io/nyulibraries/${IMAGE_NAME}_test:${BRANCH_NO_SLASH}
      docker push quay.io/nyulibraries/${IMAGE_NAME}_test:${BRANCH_NO_SLASH}-${CIRCLE_SHA1}

version: 2.1
orbs:
  hermes:
    executors:
      hermes:
        docker:
          - image: cimg/base:2021.07
    commands:
      setup:
        parameters:
          host:
            description: 'Point to an instance of the Hermes host server'
            type: string
          secret:
            description: 'Supply the Hermes host secret'
            type: string
          tag:
            description: 'Image tag for deployment'
            type: string
          deployment:
            description: 'Kubernetes deployment name'
            type: string
        steps:
          - run: 
              name: Export Hermes dev env vars
              command: |
                echo 'export HERMES_HOST=<<parameters.host>>' >> $BASH_ENV
                echo 'export HERMES_SECRET=<<parameters.secret>>' >> $BASH_ENV
                echo 'export TAG=<<parameters.tag>>' >> $BASH_ENV
                echo 'export HERMES_DEPLOYMENT=<<parameters.deployment>>' >> $BASH_ENV
      auth_docker:
        parameters:
          host:
            default: 'quay.io'
            description: 'Provide docker host'
            type: string
          username:
            description: 'Provide docker username'
            type: string
          password: 
            description: 'Provide docker password'
            type: string
        steps:
          - run:
              name: Authenticate Docker 
              command: |
                docker login -u "<<parameters.username>>" --password "<<parameters.password>>" <<parameters.host>>
      set_image:
        parameters:
          client_tag:
            default: 'master'
            description: Pick a specific hermesclient image tag, defaults to master
            type: string
          client_image:
            default: 'quay.io/nyulibraries/hermesclient'
            description: Point to the hermesclient image
            type: string
        steps:
          - run:
              name: "Set new image"
              command: |
                docker run -e HERMES_HOST -e HERMES_SECRET <<parameters.client_image>>:<<parameters.client_tag>> setImage -deployment=${HERMES_DEPLOYMENT} -tag=${TAG}
      rollout_status:
        parameters:
          client_tag:
            default: 'master'
            description: Pick a specific hermesclient image tag, defaults to master
            type: string
          client_image:
            default: 'quay.io/nyulibraries/hermesclient'
            description: Point to the hermesclient image
            type: string
        steps:
          - run: 
              name: "Get rollout status"
              command: |
                docker run -e HERMES_HOST -e HERMES_SECRET <<parameters.client_image>>:<<parameters.client_tag>> rolloutStatus -deployment=${HERMES_DEPLOYMENT}

jobs:
  hermes-deploy:
    <<: *docker-defaults
    steps:
      - setup_remote_docker
      - hermes/setup:
          host: ${HERMES_HOST}
          secret: ${HERMES_SECRET}
          tag: ${CIRCLE_BRANCH//\//_}-${CIRCLE_SHA1}
          deployment: ${HERMES_DEPLOYMENT}
      - hermes/auth_docker:
          username: ${QUAY_USERNAME}
          password: ${QUAY_PASSWORD}
      - hermes/set_image
      - hermes/rollout_status
          
  test-and-build-image:
    <<: *docker-defaults
    steps:
      - checkout
      - setup_remote_docker
      - <<: *pull_docker
      - <<: *build_docker
      - <<: *test
      - <<: *push_docker

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test-and-build-image
      - hermes-deploy:
          name: hermes-deploy-dev
          context: web-hermes-dev
          requires: 
            - test-and-build-image   
          filters:
            branches:
              ignore: master
      - hermes-deploy:
          name: hermes-deploy-prod
          context: web-hermes-prod
          requires: 
            - test-and-build-image   
          filters:
            branches:
              only: master   

